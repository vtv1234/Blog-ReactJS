{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\19110042\\\\src\\\\routes\\\\postDetailRoute.js\";\nimport React, { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\n\nconst data = require('../models/post');\n\nconst detail = require('../models/comment');\n\nfunction Detail() {\n  const {\n    id\n  } = useParams();\n  const [, setCommentsDetail] = useState([]);\n  const [textComment, setTextComment] = useState(\"\");\n  const post = data.posts.find(position => position.id === parseInt(id));\n  var comment = [];\n\n  for (const findComment of detail.comments) {\n    if (findComment.id === id) {\n      comment.push(findComment);\n    }\n  }\n\n  const addComment = e => {\n    e.preventDefault();\n    if (textComment.length === 0) return;\n    const newComment = {\n      id: id,\n      context: textComment\n    };\n    detail.comments.push(newComment);\n    setCommentsDetail(detail.comments);\n    setTextComment(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Detail Post\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"u\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Title:\"), \" \", post.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"u\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }\n  }, \"Content:\"), \" \", post.content), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, comment.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }\n    }, \"+ Comment: \", item.context));\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    id: \"comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Comment here: \", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"comment\",\n    type: \"text\",\n    required: true,\n    value: textComment,\n    onChange: e => setTextComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 47\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"post\",\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: \"/index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"See All Posts\"));\n}\n\nexport default Detail;","map":{"version":3,"sources":["D:/Downloads/19110042/src/routes/postDetailRoute.js"],"names":["React","useState","Link","useParams","data","require","detail","Detail","id","setCommentsDetail","textComment","setTextComment","post","posts","find","position","parseInt","comment","findComment","comments","push","addComment","e","preventDefault","length","newComment","context","title","content","map","item","index","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nconst data = require('../models/post');\r\nconst detail = require('../models/comment');\r\n\r\nfunction Detail() {\r\n    const { id } = useParams();\r\n    const [, setCommentsDetail] = useState([]);\r\n    const [textComment, setTextComment] = useState(\"\");\r\n\r\n    const post = data.posts.find(position => position.id === parseInt(id));\r\n    var comment = [];\r\n    for (const findComment of detail.comments) {\r\n        if (findComment.id === id) {\r\n            comment.push(findComment);\r\n        }\r\n    }\r\n\r\n    const addComment = (e) => {\r\n        e.preventDefault();\r\n        if (textComment.length === 0) return;\r\n        const newComment = {\r\n            id: id,\r\n            context: textComment\r\n        };\r\n        detail.comments.push(newComment);\r\n        setCommentsDetail(detail.comments);\r\n        setTextComment(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"details\">\r\n            <h1>Detail Post</h1>\r\n            <h2><u>Title:</u> {post.title}</h2>\r\n            <p><u>Content:</u> {post.content}</p>\r\n            <ul>\r\n            {\r\n                comment.map((item, index) => {\r\n                    return (\r\n                        <li key={index}>\r\n                            <p>+ Comment: {item.context}</p>\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n            </ul>\r\n            <form onSubmit={addComment}>\r\n                <p id=\"comment\">Comment here: <input id=\"comment\" type=\"text\" required value={textComment} onChange={(e) => setTextComment(e.target.value)} /></p>\r\n                <input id=\"post\" type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n            <Link to=\"/index\">See All Posts</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Detail;"]},"metadata":{},"sourceType":"module"}