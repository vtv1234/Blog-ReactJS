{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\19110042\\\\src\\\\routes\\\\postDetailRoute.js\";\nimport React, { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\n\nconst data = require('../models/post');\n\nconst detail = require('../models/comment');\n\nfunction Detail() {\n  const {\n    id\n  } = useParams();\n  const [commentsDetail, setCommentsDetail] = useState([]);\n  const [textComment, setTextComment] = useState(\"\");\n  const post = data.posts.find(position => position.id === parseInt(id));\n  var comment = [];\n\n  for (const findComment of detail.comments) {\n    if (findComment.id === id) {\n      comment.push(findComment);\n    }\n  }\n\n  const addComment = index => {\n    const cmt = {\n      id: index,\n      context: textComment\n    };\n    detail.comments.push(cmt);\n    setTextComment(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Detail Post\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Title: \", post.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Content: \", post.content), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, commentsDetail.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"texts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }\n    }, \"Content: \", item.content)));\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Comment: \", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"comment\",\n    type: \"text\",\n    required: true,\n    value: textComment,\n    onChange: e => setTextComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"post\",\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: \"/index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"See All Posts\"));\n}\n\nexport default Detail;","map":{"version":3,"sources":["D:/Downloads/19110042/src/routes/postDetailRoute.js"],"names":["React","useState","Link","useParams","data","require","detail","Detail","id","commentsDetail","setCommentsDetail","textComment","setTextComment","post","posts","find","position","parseInt","comment","findComment","comments","push","addComment","index","cmt","context","title","content","map","item","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nconst data = require('../models/post');\r\nconst detail = require('../models/comment');\r\n\r\nfunction Detail() {\r\n    const { id } = useParams();\r\n    const [commentsDetail, setCommentsDetail] = useState([]);\r\n    const [textComment, setTextComment] = useState(\"\");\r\n\r\n    const post = data.posts.find(position => position.id === parseInt(id));\r\n    var comment = [];\r\n    for (const findComment of detail.comments) {\r\n        if (findComment.id === id) {\r\n            comment.push(findComment);\r\n        }\r\n    }\r\n\r\n    const addComment = (index) => {\r\n        const cmt = {\r\n            id: index,\r\n            context: textComment\r\n        };\r\n        detail.comments.push(cmt);\r\n        setTextComment(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"details\">\r\n            <h1>Detail Post</h1>\r\n\r\n            <h2>Title: {post.title}</h2>\r\n            <p>Content: {post.content}</p>\r\n            <ul>\r\n            {\r\n                commentsDetail.map((item, index) => {\r\n                    return (\r\n                        <li key={index}>\r\n                            <div className=\"texts\">\r\n                                <p id=\"comment\">Content: {item.content}</p>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n            </ul>\r\n            <form onSubmit={addComment}>\r\n                <p>Comment: <input id=\"comment\" type=\"text\" required value={textComment} onChange={(e) => setTextComment(e.target.value)} /></p>\r\n                <input id=\"post\" type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n            <Link to=\"/index\">See All Posts</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Detail;"]},"metadata":{},"sourceType":"module"}