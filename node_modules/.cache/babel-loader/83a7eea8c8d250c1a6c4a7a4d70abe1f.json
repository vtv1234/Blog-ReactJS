{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\19110042\\\\src\\\\routes\\\\postsRoute.js\";\nimport React, { useState } from \"react\";\n\nconst data = require('../models/post');\n\nconst comments = require('../models/comment');\n\nfunction Posts() {\n  const [postsData, setPostsData] = useState([]);\n  const [textTitle, setTextTitle] = useState(\"\");\n  const [textContent, setTextContent] = useState(\"\");\n  const [textComment, setTextComment] = useState(\"\");\n\n  const addItem = e => {\n    e.preventDefault();\n    if (textTitle.length === 0 || textContent.length === 0) return;\n    const newPost = {\n      id: data.posts.length ? data.posts[data.posts.length - 1].id + 1 : 1,\n      title: textTitle,\n      content: textContent\n    };\n    data.posts.push(newPost);\n    setPostsData(data.posts);\n    setTextTitle(\"\");\n    setTextContent(\"\");\n  };\n\n  const editItem = index => {\n    if (textTitle.length === 0 || textContent.length === 0) return;\n    const post = data.posts.find(position => position.id === parseInt(index));\n    post.title = textTitle;\n    post.content = textContent;\n    const newPosts = data.posts.filter(position => position.id !== parseInt(index));\n    newPosts.push(post);\n    newPosts.sort((a, b) => a.id > b.id ? 1 : a.id < b.id ? -1 : 0);\n    data.posts = newPosts;\n    setPostsData(data.posts);\n    setTextTitle(\"\");\n    setTextContent(\"\");\n  };\n\n  const addComment = index => {};\n\n  const removeItem = index => {\n    const newPosts = data.posts.filter(position => position.id !== parseInt(index));\n    data.posts = newPosts;\n    setPostsData(data.posts);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"posts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Posts\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Title: \", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"title\",\n    type: \"text\",\n    required: true,\n    value: textTitle,\n    onChange: e => setTextTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Content: \", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"content\",\n    type: \"text\",\n    required: true,\n    value: textContent,\n    onChange: e => setTextContent(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, postsData.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"texts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 33\n      }\n    }, \"Title: \", item.title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }, \"Content: \", item.content)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => editItem(item.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 33\n      }\n    }, \"Update\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => removeItem(item.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }\n    }, \"Remove\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: addComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      value: textComment,\n      onChange: e => setTextContent(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 37\n      }\n    }))));\n  })));\n}\n\nexport default Posts;","map":{"version":3,"sources":["D:/Downloads/19110042/src/routes/postsRoute.js"],"names":["React","useState","data","require","comments","Posts","postsData","setPostsData","textTitle","setTextTitle","textContent","setTextContent","textComment","setTextComment","addItem","e","preventDefault","length","newPost","id","posts","title","content","push","editItem","index","post","find","position","parseInt","newPosts","filter","sort","a","b","addComment","removeItem","target","value","map","item"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\n\nconst data = require('../models/post');\nconst comments = require('../models/comment');\n\nfunction Posts() {\n    const [postsData, setPostsData] = useState([])\n    const [textTitle, setTextTitle] = useState(\"\")\n    const [textContent, setTextContent] = useState(\"\")\n    const [textComment, setTextComment] = useState(\"\")\n\n    const addItem = (e) => {\n        e.preventDefault();\n        if(textTitle.length === 0 || textContent.length === 0) return;\n        const newPost = {\n            id: data.posts.length ? data.posts[data.posts.length - 1].id + 1 : 1,\n            title: textTitle,\n            content: textContent\n        };\n        data.posts.push(newPost);\n        setPostsData(data.posts);\n        setTextTitle(\"\");\n        setTextContent(\"\");\n    }\n\n    const editItem = (index) => {\n        if(textTitle.length === 0 || textContent.length === 0) return;\n        const post = data.posts.find(position => position.id === parseInt(index));\n        post.title = textTitle;\n        post.content = textContent;\n        const newPosts = data.posts.filter(position => position.id !== parseInt(index));\n        newPosts.push(post);\n        newPosts.sort((a, b) => a.id > b.id ? 1 : a.id < b.id ? -1 : 0)\n        data.posts = newPosts;\n        setPostsData(data.posts);\n        setTextTitle(\"\");\n        setTextContent(\"\");\n    }\n\n    const addComment = (index) => {\n    }\n\n    const removeItem = (index) => {\n        const newPosts = data.posts.filter(position => position.id !== parseInt(index));\n        data.posts = newPosts;\n        setPostsData(data.posts)\n    }\n\n    return (\n        <div className=\"posts\">\n            <h1>Posts</h1>\n            <form onSubmit={addItem}>\n                <p>Title: <input id=\"title\" type=\"text\" required value={textTitle} onChange={(e) => setTextTitle(e.target.value)} /></p>\n                <p>Content: <input id=\"content\" type=\"text\" required value={textContent} onChange={(e) => setTextContent(e.target.value)} /></p>\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n            <ul>\n            {\n                postsData.map((item, index) => {\n                    return (\n                        <li key={index}>\n                            <div className=\"texts\">\n                                <h4>Title: {item.title}</h4>\n                                <p>Content: {item.content}</p>\n                            </div>\n                            <div className=\"buttons\">\n                                <button onClick={() => editItem(item.id)}>Update</button>\n                                <button onClick={() => removeItem(item.id)}>Remove</button>\n                            </div>\n                            <div>\n                                <form onSubmit={addComment}>\n                                    <input type=\"text\" required value={textComment} onChange={(e) => setTextContent(e.target.value)} />\n                                    <input type=\"submit\" value=\"Submit\" />\n                                </form>\n                            </div>\n                        </li>\n                    )\n                })\n            }\n            </ul>\n        </div>\n    )\n}\n\nexport default Posts;"]},"metadata":{},"sourceType":"module"}