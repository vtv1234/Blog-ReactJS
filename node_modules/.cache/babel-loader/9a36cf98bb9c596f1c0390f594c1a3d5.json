{"ast":null,"code":"var _jsxFileName = \"E:\\\\VINH\\\\DAIHOC\\\\NAM4\\\\CNPMM\\\\ReactJS\\\\19110042-ReactJS\\\\src\\\\routes\\\\postsRoute.js\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst data = require('../models/post');\n\nfunction Posts() {\n  const [, setPostsData] = useState([]);\n  const [textTitle, setTextTitle] = useState(\"\");\n  const [textContent, setTextContent] = useState(\"\");\n\n  const addItem = e => {\n    e.preventDefault();\n    if (textTitle.length === 0 || textContent.length === 0) return;\n    const newPost = {\n      id: data.posts.length ? data.posts[data.posts.length - 1].id + 1 : 1,\n      title: textTitle,\n      content: textContent\n    };\n    data.posts.push(newPost);\n    setPostsData(data.posts);\n    setTextTitle(\"\");\n    setTextContent(\"\");\n  };\n\n  const edit = index => {\n    if (textTitle.length === 0 || textContent.length === 0) return;\n    const post = data.posts.find(position => position.id === parseInt(index));\n    post.title = textTitle;\n    post.content = textContent;\n    const newPosts = data.posts.filter(position => position.id !== parseInt(index));\n    newPosts.push(post);\n    newPosts.sort((a, b) => a.id > b.id ? 1 : a.id < b.id ? -1 : 0);\n    data.posts = newPosts;\n    setPostsData(data.posts);\n    setTextTitle(\"\");\n    setTextContent(\"\");\n  };\n\n  const removeItem = index => {\n    const newPosts = data.posts.filter(position => position.id !== parseInt(index));\n    data.posts = newPosts;\n    setPostsData(data.posts);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"posts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Posts\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Title: \", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"title\",\n    type: \"text\",\n    maxlength: \"100\",\n    required: true,\n    value: textTitle,\n    onChange: e => setTextTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Content: \", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"content\",\n    type: \"text\",\n    maxlength: \"5000\",\n    required: true,\n    value: textContent,\n    onChange: e => setTextContent(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"post\",\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, data.posts.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"texts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }\n    }, \"Title: \", item.title), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }\n    }, \"Content: \", item.content)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"edit\",\n      onClick: () => editItem(item.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 38\n      }\n    }, \"Update\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"delete\",\n      onClick: () => removeItem(item.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 38\n      }\n    }, \"Remove\"))), /*#__PURE__*/React.createElement(Link, {\n      to: `/post/${item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }, \"See Details\"));\n  })));\n}\n\nexport default Posts;","map":{"version":3,"sources":["E:/VINH/DAIHOC/NAM4/CNPMM/ReactJS/19110042-ReactJS/src/routes/postsRoute.js"],"names":["React","useState","Link","data","require","Posts","setPostsData","textTitle","setTextTitle","textContent","setTextContent","addItem","e","preventDefault","length","newPost","id","posts","title","content","push","edit","index","post","find","position","parseInt","newPosts","filter","sort","a","b","removeItem","target","value","map","item","editItem"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst data = require('../models/post');\r\n\r\nfunction Posts() {\r\n    const [, setPostsData] = useState([]);\r\n    const [textTitle, setTextTitle] = useState(\"\");\r\n    const [textContent, setTextContent] = useState(\"\");\r\n\r\n    const addItem = (e) => {\r\n        e.preventDefault();\r\n        if (textTitle.length === 0 || textContent.length === 0) return;\r\n        const newPost = {\r\n            id: data.posts.length ? data.posts[data.posts.length - 1].id + 1 : 1,\r\n            title: textTitle,\r\n            content: textContent\r\n        };\r\n        data.posts.push(newPost);\r\n        setPostsData(data.posts);\r\n        setTextTitle(\"\");\r\n        setTextContent(\"\");\r\n    }\r\n\r\n    const edit = (index) => {\r\n        if (textTitle.length === 0 || textContent.length === 0) return;\r\n        const post = data.posts.find(position => position.id === parseInt(index));\r\n        post.title = textTitle;\r\n        post.content = textContent;\r\n        const newPosts = data.posts.filter(position => position.id !== parseInt(index));\r\n        newPosts.push(post);\r\n        newPosts.sort((a, b) => a.id > b.id ? 1 : a.id < b.id ? -1 : 0);\r\n        data.posts = newPosts;\r\n        setPostsData(data.posts);\r\n        setTextTitle(\"\");\r\n        setTextContent(\"\");\r\n    }\r\n\r\n    const removeItem = (index) => {\r\n        const newPosts = data.posts.filter(position => position.id !== parseInt(index));\r\n        data.posts = newPosts;\r\n        setPostsData(data.posts);\r\n    }\r\n\r\n    return (\r\n        <div className=\"posts\">\r\n            <h1>Posts</h1>\r\n            <form onSubmit={addItem}>\r\n                <p>Title: <input id=\"title\" type=\"text\"  maxlength=\"100\" required value={textTitle} onChange={(e) => setTextTitle(e.target.value)} /></p>\r\n                <p>Content: <input id=\"content\" type=\"text\" maxlength=\"5000\" required value={textContent} onChange={(e) => setTextContent(e.target.value)} /></p>\r\n                <input id=\"post\" type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n\r\n            <ul>\r\n            {\r\n                data.posts.map((item, index) => {\r\n                    return (\r\n                        <li key={index}>\r\n                            <div className=\"texts\">\r\n                                <h4>Title: {item.title}</h4>\r\n                                <p id=\"content\">Content: {item.content}</p>\r\n                            </div>\r\n                            <div className=\"buttons\">\r\n                                <div><button id=\"edit\" onClick={() => editItem(item.id)}>Update</button></div>\r\n                                <div><button id=\"delete\" onClick={() => removeItem(item.id)}>Remove</button></div>\r\n                            </div>\r\n                            <Link to={`/post/${item.id}`}>See Details</Link>\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts;"]},"metadata":{},"sourceType":"module"}